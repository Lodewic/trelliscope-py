[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "trelliscope"
dependencies = [
    "pandas >= 1.5.2",
    "kaleido == 0.1.*",
    "plotly >= 5.18.0",
    "plotly-express >= 0.4.1"
]
version = "0.0.0-alpha1"
authors = [
  { name="Scott Burton", email="sburton@thinkoriginally.com" },
]
description = "A python interface to the Trelliscope data science library."
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
]

[project.optional-dependencies]
dev = [
    "trelliscope[test]",
    "ruff~=0.1"
]
test = [
    "pytest~=7.4",
    "pytest-cov~=2.5"
]

[tool.pytest.ini_options]
addopts = """
--import-mode=importlib \
--cov-report term-missing \
--cov trelliscope -ra
"""

testpaths = [
  "trelliscope/tests"
]

[project.urls]
"Homepage" = "https://github.com/trelliscope/trelliscope-py"
"Bug Tracker" = "https://github.com/trelliscope/trelliscope-py/issues"


[tool.ruff]
line-length = 88
show-fixes = true
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
    "S", # flake8-bandit
]
ignore = ["E501", "PLR0913"]  # allow too-long lines if they cannot be fixed safely, and dont check N function arguments.

[tool.ruff.isort]
known-first-party = ["trelliscope"]


[tool.ruff.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"{*/__init__.py}" = ["F401"]  # allow unused imports in __init__ files
"{trelliscope/tests/*}" = ["S101"]  # Allow 'assert' in tests
"{trelliscope/examples/*,trelliscope/progress_bar.py}" = ["T201"]  # Allow 'print' statements in examples and progress_bar
[tool.mypy]
ignore_missing_imports = true
